package com.zc.efounder.JEnterprise.service.baseData;

import com.ruoyi.common.core.domain.AjaxResult;
import com.zc.efounder.JEnterprise.domain.baseData.Product;
import com.zc.efounder.JEnterprise.domain.baseData.ProductFunction;
import com.zc.efounder.JEnterprise.domain.baseData.ProductItemData;

import java.util.List;
import java.util.Map;

/**
 * 产品定义Service接口
 *
 * @author gaojikun
 * @date 2023-03-07
 */
public interface ProductService {
    /**
     * 查询产品定义
     *
     * @param id 产品定义主键
     * @return AjaxResult
     */
    public AjaxResult selectAthenaBesProductById(Long id);

    /**
     * 查询产品数据项
     *
     * @param id 产品数据项主键
     * @return AjaxResult
     */
    public AjaxResult selectAthenaBesProductItemDataById(Long id);

    /**
     * 查询产品定义列表
     *
     * @param product 产品定义
     * @return 产品定义集合
     */
    List<Product> selectAthenaBesProductList(Product product);

    /**
     * @Author:gaojikun
     * @Date:2023-03-08 16:03
     * @Description:查询所有产品
     * @Return:AjaxResult
     */
    AjaxResult selectAllProductList(Product product);

    /**
     * 查询产品数据项列表
     *
     * @param productItemData 产品数据项
     * @return 产品数据项集合
     */
    List<ProductItemData>selectAthenaBesProductItemDataList(ProductItemData productItemData);

    /**
     * 新增产品定义
     *
     * @param product 产品定义
     * @return AjaxResult
     */
    AjaxResult insertAthenaBesProduct(Product product);

    /**
     * 新增产品数据项
     *
     * @param productItemData 产品数据项
     * @return AjaxResult
     */
    AjaxResult insertAthenaBesProductItemData(ProductItemData productItemData);

    /**
     * 修改产品定义
     *
     * @param product 产品定义
     * @return AjaxResult
     */
    AjaxResult updateAthenaBesProduct(Product product);

    /**
     * 修改产品配置-数据项
     *
     * @param productItemData 产品配置-数据项
     * @return AjaxResult
     */
    AjaxResult updateAthenaBesProductItemData(ProductItemData productItemData);

    /**
     * 批量删除产品定义
     *
     * @param ids 需要删除的产品定义主键集合
     * @return AjaxResult
     */
    AjaxResult deleteAthenaBesProductByIds(Long[] ids);

    /**
     * 删除产品定义信息
     *
     * @param id 产品定义主键
     * @return AjaxResult
     */
    AjaxResult deleteAthenaBesProductById(Long id);

    /**
     * 批量删除产品配置-数据项
     *
     * @param ids 需要删除的产品配置-数据项主键集合
     * @return AjaxResult
     */
    AjaxResult deleteAthenaBesProductItemDataByIds(Long[] ids);

    /**
     * 删除产品配置-数据项信息
     *
     * @param id 产品配置-数据项主键
     * @return AjaxResult
     */
    AjaxResult deleteAthenaBesProductItemDataById(Long id);

    /**
     * 查询物联类型list
     *
     * @return List<Map < String, Object>>
     */
    List<Map<String, Object>> getAllIotTypeList(String dictType, String id);

    List<Map<String, Object>> getAllMessageIdList(String dictType,String id);

    /**
     * 查询产品配置-功能定义
     *
     * @param id 产品配置-功能定义主键
     * @return AjaxResult
     */
    public AjaxResult selectAthenaBesProductFunctionById(Long id);

    /**
     * 查询产品配置-功能定义列表
     *
     * @param productFunction 产品配置-功能定义
     * @return 产品配置-功能定义集合
     */
    List<ProductFunction> selectAthenaBesProductFunctionList(ProductFunction productFunction);

    /**
     * 新增产品配置-功能定义
     *
     * @param productFunction 产品配置-功能定义
     * @return AjaxResult
     */
    AjaxResult insertAthenaBesProductFunction(ProductFunction productFunction);

    /**
     * 修改产品配置-功能定义
     *
     * @param productFunction 产品配置-功能定义
     * @return AjaxResult
     */
    AjaxResult updateAthenaBesProductFunction(ProductFunction productFunction);

    /**
     * 批量删除产品配置-功能定义
     *
     * @param ids 需要删除的产品配置-功能定义主键集合
     * @return AjaxResult
     */
    AjaxResult deleteAthenaBesProductFunctionByIds(Long[] ids);

    /**
     * 删除产品配置-功能定义信息
     *
     * @param id 产品配置-功能定义主键
     * @return 结果
     */
    AjaxResult deleteAthenaBesProductFunctionById(Long id);
}
