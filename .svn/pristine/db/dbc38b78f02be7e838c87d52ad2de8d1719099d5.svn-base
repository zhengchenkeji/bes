<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.efounder.JEnterprise.mapper.energyDataReport.BuildGroupInfoMapper">
    
    <resultMap type="BuildGroupInfo" id="BuildGroupInfoResult">
        <result property="id"    column="id"    />
        <result property="buildGroupName"    column="build_group_name"    />
        <result property="groupAliasName"    column="group_alias_name"    />
        <result property="groupDesc"    column="group_desc"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBuildGroupInfoVo">
        select id, build_group_name, group_alias_name, group_desc, create_time, update_time from athena_bes_build_group_info
    </sql>

    <select id="selectBuildGroupInfoList" parameterType="BuildGroupInfo" resultMap="BuildGroupInfoResult">
        <include refid="selectBuildGroupInfoVo"/>
        <where>  
            <if test="buildGroupName != null  and buildGroupName != ''"> and build_group_name like concat('%', #{buildGroupName}, '%')</if>
            <if test="groupAliasName != null  and groupAliasName != ''"> and group_alias_name like concat('%', #{groupAliasName}, '%')</if>
            <if test="groupDesc != null  and groupDesc != ''"> and group_desc = #{groupDesc}</if>
        </where>
    </select>
    
    <select id="selectBuildGroupInfoById" parameterType="Long" resultMap="BuildGroupInfoResult">
        <include refid="selectBuildGroupInfoVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBuildGroupInfo" parameterType="BuildGroupInfo">
        insert into athena_bes_build_group_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="buildGroupName != null and buildGroupName != ''">build_group_name,</if>
            <if test="groupAliasName != null and groupAliasName != ''">group_alias_name,</if>
            <if test="groupDesc != null and groupDesc != ''">group_desc,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="buildGroupName != null and buildGroupName != ''">#{buildGroupName},</if>
            <if test="groupAliasName != null and groupAliasName != ''">#{groupAliasName},</if>
            <if test="groupDesc != null and groupDesc != ''">#{groupDesc},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBuildGroupInfo" parameterType="BuildGroupInfo">
        update athena_bes_build_group_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="buildGroupName != null and buildGroupName != ''">build_group_name = #{buildGroupName},</if>
            <if test="groupAliasName != null and groupAliasName != ''">group_alias_name = #{groupAliasName},</if>
            <if test="groupDesc != null and groupDesc != ''">group_desc = #{groupDesc},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBuildGroupInfoById" parameterType="Long">
        delete from athena_bes_build_group_info where id = #{id}
    </delete>

    <delete id="deleteBuildGroupInfoByIds" parameterType="String">
        delete from athena_bes_build_group_info where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="queryBuildGroupInfoByName" parameterType="BuildGroupInfo" resultMap="BuildGroupInfoResult">
        <include refid="selectBuildGroupInfoVo"/>
        <where>
            build_group_name = #{buildGroupName}
        </where>
    </select>
</mapper>