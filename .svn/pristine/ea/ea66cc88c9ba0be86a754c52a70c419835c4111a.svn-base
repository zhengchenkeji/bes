package com.ruoyi.efounder.JEnterprise.controller.energyDataReport;

import java.util.List;
import javax.servlet.http.HttpServletResponse;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.annotation.Log;
import com.ruoyi.common.core.controller.BaseController;
import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.enums.BusinessType;
import com.ruoyi.efounder.JEnterprise.domain.energyDataReport.DataCenterBaseInfo;
import com.ruoyi.efounder.JEnterprise.service.energyDataReport.IDataCenterBaseInfoService;
import com.ruoyi.common.utils.poi.ExcelUtil;
import com.ruoyi.common.core.page.TableDataInfo;

/**
 * 数据中心基本信息Controller
 * 
 * @author ruoyi
 * @date 2022-09-13
 */
@RestController
@RequestMapping("/basicData/dataCenterBaseInfo")
public class DataCenterBaseInfoController extends BaseController
{
    @Autowired
    private IDataCenterBaseInfoService dataCenterBaseInfoService;

    /**
     * 查询数据中心基本信息列表
     */
    @PreAuthorize("@ss.hasPermi('basicData:dataCenterBaseInfo:list')")
    @GetMapping("/list")
    public TableDataInfo list(DataCenterBaseInfo dataCenterBaseInfo)
    {
        startPage();
        List<DataCenterBaseInfo> list = dataCenterBaseInfoService.selectDataCenterBaseInfoList(dataCenterBaseInfo);
        return getDataTable(list);
    }

    /**
     * 导出数据中心基本信息列表
     */
    @PreAuthorize("@ss.hasPermi('basicData:dataCenterBaseInfo:export')")
    @Log(title = "数据中心基本信息", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, DataCenterBaseInfo dataCenterBaseInfo)
    {
        List<DataCenterBaseInfo> list = dataCenterBaseInfoService.selectDataCenterBaseInfoList(dataCenterBaseInfo);
        ExcelUtil<DataCenterBaseInfo> util = new ExcelUtil<>(DataCenterBaseInfo.class);
        util.exportExcel(response, list, "数据中心基本信息数据");
    }

    /**
     * 获取数据中心基本信息详细信息
     */
    @PreAuthorize("@ss.hasPermi('basicData:dataCenterBaseInfo:query')")
    @GetMapping(value = "/{id}")
    public AjaxResult getInfo(@PathVariable("id") Long id)
    {
        return AjaxResult.success(dataCenterBaseInfoService.selectDataCenterBaseInfoById(id));
    }

    /**
     * 新增数据中心基本信息
     */
    @PreAuthorize("@ss.hasPermi('basicData:dataCenterBaseInfo:add')")
    @Log(title = "数据中心基本信息", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody DataCenterBaseInfo dataCenterBaseInfo)
    {
        return dataCenterBaseInfoService.insertDataCenterBaseInfo(dataCenterBaseInfo);
    }

    /**
     * 修改数据中心基本信息
     */
    @PreAuthorize("@ss.hasPermi('basicData:dataCenterBaseInfo:edit')")
    @Log(title = "数据中心基本信息", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody DataCenterBaseInfo dataCenterBaseInfo)
    {
        return dataCenterBaseInfoService.updateDataCenterBaseInfo(dataCenterBaseInfo);
    }

    /**
     * 删除数据中心基本信息
     */
    @PreAuthorize("@ss.hasPermi('basicData:dataCenterBaseInfo:remove')")
    @Log(title = "数据中心基本信息", businessType = BusinessType.DELETE)
	@DeleteMapping("/{ids}")
    public AjaxResult remove(@PathVariable Long[] ids)
    {
        return dataCenterBaseInfoService.deleteDataCenterBaseInfoByIds(ids);
    }
}
