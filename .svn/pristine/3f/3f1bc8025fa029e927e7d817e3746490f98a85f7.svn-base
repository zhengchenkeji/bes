package com.ruoyi.energyDataReport.buildGroupInfo.service.impl;

import java.util.List;
import com.ruoyi.common.utils.DateUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.ruoyi.energyDataReport.buildGroupInfo.mapper.BuildGroupInfoMapper;
import com.ruoyi.energyDataReport.buildGroupInfo.domain.BuildGroupInfo;
import com.ruoyi.energyDataReport.buildGroupInfo.service.BuildGroupInfoService;

/**
 * 建筑群信息Service业务层处理
 *
 * @author ruoyi
 * @date 2022-09-13
 */
@Service
public class BuildGroupInfoServiceImpl implements BuildGroupInfoService
{
    @Autowired
    private BuildGroupInfoMapper buildGroupInfoMapper;

    /**
     * 查询建筑群信息
     *
     * @param id 建筑群信息主键
     * @return 建筑群信息
     */
    @Override
    public BuildGroupInfo selectBuildGroupInfoById(Long id)
    {
        return buildGroupInfoMapper.selectBuildGroupInfoById(id);
    }

    /**
     * 查询建筑群信息列表
     *
     * @param buildGroupInfo 建筑群信息
     * @return 建筑群信息
     */
    @Override
    public List<BuildGroupInfo> selectBuildGroupInfoList(BuildGroupInfo buildGroupInfo)
    {
        return buildGroupInfoMapper.selectBuildGroupInfoList(buildGroupInfo);
    }

    /**
     * 新增建筑群信息
     *
     * @param buildGroupInfo 建筑群信息
     * @return 结果
     */
    @Override
    public int insertBuildGroupInfo(BuildGroupInfo buildGroupInfo)
    {
        buildGroupInfo.setCreateTime(DateUtils.getNowDate());
        return buildGroupInfoMapper.insertBuildGroupInfo(buildGroupInfo);
    }

    /**
     * 修改建筑群信息
     *
     * @param buildGroupInfo 建筑群信息
     * @return 结果
     */
    @Override
    public int updateBuildGroupInfo(BuildGroupInfo buildGroupInfo)
    {
        buildGroupInfo.setUpdateTime(DateUtils.getNowDate());
        return buildGroupInfoMapper.updateBuildGroupInfo(buildGroupInfo);
    }

    /**
     * 批量删除建筑群信息
     *
     * @param ids 需要删除的建筑群信息主键
     * @return 结果
     */
    @Override
    public int deleteBuildGroupInfoByIds(Long[] ids)
    {
        return buildGroupInfoMapper.deleteBuildGroupInfoByIds(ids);
    }

    /**
     * 删除建筑群信息信息
     *
     * @param id 建筑群信息主键
     * @return 结果
     */
    @Override
    public int deleteBuildGroupInfoById(Long id)
    {
        return buildGroupInfoMapper.deleteBuildGroupInfoById(id);
    }
}
