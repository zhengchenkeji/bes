<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" size="small" :inline="true" v-show="showSearch" label-width="68px">
      <el-form-item label="名称" prop="name">
        <el-input style="width:300px!important;" v-model="queryParams.name" placeholder="请输入名称" clearable
                  @keyup.enter.native="handleQuery"/>
      </el-form-item>

      <el-form-item label="状态" prop="scenestatus">
        <el-select v-model="queryParams.noticetype" multiple placeholder="请选择状态" style="width:300px!important;">
          <el-option v-for="dict in dict.type.bes_scenelink_status" :key="dict.value" :label="dict.label"
                     :value="dict.value"/>
        </el-select>
      </el-form-item>
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button type="primary" plain icon="el-icon-plus" size="mini" @click="handleAdd"
                   v-hasPermi="['safetyWarning:AlarmNotifier:add']">新增场景联动
        </el-button>
      </el-col>

      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>


    <el-row :gutter="12">
      <el-col :span="5">
        <el-card shadow="always" style="height: 230px;">
          <div>
            <el-row>
              <el-col :span="3">
                <i class="el-icon-set-up" style="font-size: 32px; "></i>
              </el-col>
              <el-col :span="21">
                <el-row style=" margin-bottom: 5px; font-size: 22px;"><span
                  style="margin-left: 20px;">测试场景</span></el-row>
              </el-col>
            </el-row>
            <!-- <el-divider style="margin: 10px;"></el-divider> -->
            <hr/>
            <el-row>
              <el-col :span="3">
                &nbsp;
              </el-col>
              <el-col :span="21">
                <el-row
                  style="margin-bottom: 5px; margin-top: 20px;     color: rgba(0,0,0,.65);font-size: 14px; font-variant: tabular-nums;line-height: 1.5;list-style: none;">
                  <el-col :span="12" style=" ">触发方式</el-col>
                  <el-col :span="12" style=" ">场景状态</el-col>
                </el-row>
              </el-col>
            </el-row>


            <el-row>
              <el-col :span="3">&nbsp;
              </el-col>
              <el-col :span="21">
                <el-row style="margin-bottom: 5px; margin-top: 30px; font-size: 14px;;">
                  <el-col :span="12" style=" ">手动触发</el-col>
                  <el-col :span="12" style=" ">已启动</el-col>
                </el-row>
              </el-col>
            </el-row>
            <hr/>
            <!-- <el-row style=" margin-bottom: 5px;">测试3</el-row> -->
            <el-row>
              <el-col :span="8">
                <el-button type="text" icon="el-icon-edit-outline"
                           @click="handleUpdate(item)">修改
                </el-button>
              </el-col>
              <el-col :span="8">
                <!-- 开关按钮 -->
                <el-button type="text" icon="el-icon-delete"
                           @click="devicePowerBtn(item)">删除
                </el-button>
              </el-col>
              <el-col :span="8">
                <!-- 开关按钮 -->
                <el-button type="text" icon="el-icon-switch-button" disabled
                           @click="devicePowerBtn(item)">开启
                </el-button>
              </el-col>

            </el-row>


          </div>
        </el-card>
      </el-col>
      <!-- <el-col :span="5" >
          <el-card shadow="always" style="height: 260px;">
              总是显示
          </el-card>
      </el-col>
      <el-col :span="5">
          <el-card shadow="always" style="height: 260px;">
              总是显示
          </el-card>
      </el-col>
      <el-col :span="5" >
          <el-card shadow="always" style="height: 260px;">
              总是显示
          </el-card>
      </el-col>

      <el-col :span="5" >
          <el-card shadow="always" style="height: 260px;">
              总是显示
          </el-card> -->
      <!-- </el-col> -->
    </el-row>

    <!-- <el-table v-loading="loading" :data="AlarmNotifierList" @selection-change="handleSelectionChange">
    <el-table-column type="selection" width="55" align="center" />
    <el-table-column label="姓名" align="center" prop="name" />
    <el-table-column label="家庭地址" align="center" prop="homeAddress" />
    <el-table-column label="联系电话" align="center" prop="tel" />
    <el-table-column label="邮箱" align="center" prop="email" />
    <el-table-column label="公司名称" align="center" prop="company" />
    <el-table-column label="公司联系电话" align="center" prop="companyTel" />
    <el-table-column label="所属组织" align="center" prop="deptname" />
    <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
      <template slot-scope="scope">
        <el-button
          size="mini"
          type="text"
          icon="el-icon-edit"
          @click="handleUpdate(scope.row)"
          v-hasPermi="['safetyWarning:AlarmNotifier:edit']"
        >修改</el-button>
        <el-button
          size="mini"
          type="text"
          icon="el-icon-delete"
          @click="handleDelete(scope.row)"
          v-hasPermi="['safetyWarning:AlarmNotifier:remove']"
        >删除</el-button>
      </template>
    </el-table-column>
  </el-table> -->

    <pagination v-show="total > 0" :total="total" :page.sync="queryParams.pageNum" :limit.sync="queryParams.pageSize"
                @pagination="getList"/>
    <Scenelinkage ref="scene"></Scenelinkage>
  </div>
</template>
<script>
import {
  listAlarmNotifier,
  getAlarmNotifier,
  delAlarmNotifier,
  addAlarmNotifier,
  updateAlarmNotifier
} from "@/api/basicData/safetyWarning/alarmNotifier/alarmNotifier";
import {listPost} from "@/api/system/post";
import {treeselect} from "@/api/system/dept";
import Treeselect from "@riophae/vue-treeselect";
import "@riophae/vue-treeselect/dist/vue-treeselect.css";
import toInteger from "lodash/toInteger";
import Scenelinkage from "./component/scenelinkage";

export default {
  name: "AlarmNotifier",
  components: {Scenelinkage, Treeselect},
  dicts: ['bes_scenelink_status'],

  data() {
    return {


      //多选默认不选中
      checked: false,
      page: {
        pageSize: 12,
        currentPage: 1,
        total: 0
      },
      selectionList: [],
      data: [{name: "张三", id: 1}],

      // 部门树选项
      deptOptions: [],
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 岗位选项
      postOptions: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // 告警接收组表格数据
      AlarmNotifierList: [],
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
        name: null,
        homeAddress: null,
        tel: null,
        email: null,
        company: null,
        companyTel: null,
        post: null,
        groupId: null,
        tacticsId: null

      },
      // 表单参数
      form: {
        post: [],

      },
      // 表单校验
      rules: {
        name: [
          {required: true, message: "姓名不能为空", trigger: "blur"}
        ],
        homeAddress: [
          {required: true, message: "家庭地址不能为空", trigger: "blur"}
        ],
        tel: [
          {required: true, message: "联系电话不能为空", trigger: "blur"},
          {pattern: /0?(13|14|15|17|18)[0-9]{9}/, message: "请输入正确手机号"}

        ],
        email: [
          {required: true, message: "邮箱不能为空", trigger: "blur"},
          {pattern: /^([a-zA-Z0-9]+[-_\.]?)+@[a-zA-Z0-9]+\.[a-z]+$/, message: "请输入正确的邮箱"}
        ],
        company: [
          {required: true, message: "公司名称不能为空", trigger: "blur"}
        ],
        companyTel: [
          {required: true, message: "公司联系电话不能为空", trigger: "blur"},
          {pattern: /^((0\d{2,3}-\d{7,8})|(1[34578]\d{9}))$/, message: "请输入正确的联系方式"}
        ],
        post: [
          {required: true, message: "岗位不能为空", trigger: "blur"}
        ],
        groupId: [
          {required: true, message: "所属组织不能为空", trigger: "change"}
        ],
        createTime: [
          {required: true, message: "创建时间不能为空", trigger: "blur"}
        ],
      }
    };
  },
  created() {
    this.getList();
    // 获取岗位信息
    listPost().then(response => {
      this.postOptions = response.rows;
    });

    // 初始化部门选择
    this.getTreeselect();
  },
  methods: {

    /** 查询告警接收组列表 */
    getList() {
      this.loading = true;
      listAlarmNotifier(this.queryParams).then(response => {
        this.AlarmNotifierList = response.rows;
        this.total = response.total;
        this.loading = false;
      });
    },

    // 取消按钮
    cancel() {
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
        id: null,
        name: null,
        homeAddress: null,
        tel: null,
        email: null,
        company: null,
        companyTel: null,
        post: [],
        groupId: null,
        createTime: null,
        updateTime: null,

      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },

    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.$refs.scene.title = "新增场景联动";
      this.$refs.scene.open = true;
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      this.$refs.scene.title = "修改场景联动";
      this.$refs.scene.open = true;
      const id = row.id || this.ids
      getAlarmNotifier(id).then(response => {
        this.form = response.data;
        var postarray = this.form.post.split(',')
        // console.log(this.form.post)
        for (let index = 0; index < postarray.length; index++) {
          postarray[index] = postarray[index] * 1;
        }
        this.form.post = postarray;
      });

    },
    /** 提交按钮 */
    submitForm() {
      var postarray = this.form.post;
      // 字符串转为数组
      this.form.post = this.form.post + "";


      this.$refs["form"].validate(valid => {
        if (valid) {
          if (this.form.id != null) {
            updateAlarmNotifier(this.form).then(response => {
              this.$modal.msgSuccess("修改成功");
              this.getList();
            }).catch(err => {
              this.form.post = postarray;
            });
          } else {
            addAlarmNotifier(this.form).then(response => {
              this.$modal.msgSuccess("新增成功");
              this.getList();
            }).catch(err => {
              this.form.post = postarray;
            });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const ids = row.id || this.ids;
      this.$modal.confirm('是否确认删除选中的告警接收组？').then(function () {
        return delAlarmNotifier(ids);
      }).then(() => {
        this.getList();
        this.$modal.msgSuccess("删除成功");
      }).catch(() => {
      });
    },
    /** 导出按钮操作 */
    handleExport() {
      this.download('safetyWarning/AlarmNotifier/export', {
        ...this.queryParams
      }, `告警接收组.xlsx`)
    }
  }
};
</script>
<style>
.ant-card-actions {
  margin: 0;
  padding: 0;
  list-style: none;
  height: 50px;;
  background: #fafafa;
  border-top: 1px solid #e8e8e8;
  zoom: 1;

}

.ant-card-actions > li:not(:last-child) {
  border-right: 1px solid #e8e8e8;
}

.ant-card-actions > li {
  float: left;
  margin: 12px 0;
  color: rgba(0, 0, 0, .45);
  text-align: center;
}
</style>
