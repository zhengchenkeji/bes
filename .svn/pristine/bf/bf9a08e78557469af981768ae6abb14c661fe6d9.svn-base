package com.zc.efounder.JEnterprise.controller.sceneLink;

import com.alibaba.fastjson.JSONObject;
import com.github.xiaoymin.knife4j.annotations.ApiSupport;
import com.ruoyi.common.annotation.Log;
import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.enums.BusinessType;
import com.ruoyi.common.exception.job.TaskException;
import com.zc.efounder.JEnterprise.domain.noticeManage.NoticeTemplate;
import com.zc.efounder.JEnterprise.domain.sceneLink.Scene;
import com.zc.efounder.JEnterprise.service.noticeManage.NoticeTemplateService;
import com.zc.efounder.JEnterprise.service.safetyWarning.AlarmTacticsService;
import com.zc.efounder.JEnterprise.service.sceneLink.SceneLinkService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.quartz.SchedulerException;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;

/**
 * description:场景联动控制器
 * author: sunshangeng
 * date:2023/2/28 10:53
 */
@RestController
@RequestMapping("/sceneLink")
@Api(value = "SceneLinkController", tags = {"场景联动"})
@ApiSupport(author = "sunshangeng")
public class SceneLinkController {

    @Resource
    private SceneLinkService sceneLinkService;
    /**
     * 新增通知模板配置
     */
    @ApiOperation(value = "新增场景联动")
    @Log(title = "新增场景联动", businessType = BusinessType.INSERT)
    @PostMapping("/add")
    public AjaxResult add( @RequestBody Scene scene) throws TaskException, SchedulerException {
        return  sceneLinkService.insertScene(scene);
    }
    /**
     * 场景详情
     */
    @ApiOperation(value = "获取场景联动详细信息")
    @GetMapping("/info/{id}")
    @ApiImplicitParam(name = "id",value = "场景ID",required = true,dataType = "long")
    public AjaxResult getInfo(@PathVariable("id") Long id)
    {
        return sceneLinkService.getInfo(id);
    }



}
