package com.zc.relay.handler;

import com.alibaba.fastjson.JSONObject;
import com.zc.iot.domain.IotDebug;
import com.zc.iot.domain.IotDebugAttribute;
import com.zc.iot.domain.IotDebugServe;
import com.zc.iot.service.IIotDeviceService;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;

/**
 * 设备操作
 * @author Athena-xiepufeng
 */
@Service
public class DeviceOperationImpl implements DeviceOperation
{
    @Resource
    private IIotDeviceService iotDeviceService;

    /**
     * 设置属性
     *
     * @param identifier 消息标识
     * @param deviceId   设备id
     * @param functionId 功能id
     * @param value      属性值
     * @return 是否操作成功
     */
    @Override
    public boolean setAttribute(String identifier, Long deviceId, Long functionId, Number value) {

        IotDebugAttribute iotDebugAttribute = new IotDebugAttribute();

        iotDebugAttribute.setIdentifier(identifier);
        iotDebugAttribute.setDeviceId(deviceId);
        iotDebugAttribute.setFunctionId(functionId);
        iotDebugAttribute.setValue(value);

        return iotDeviceService.setAttribute(iotDebugAttribute);
    }

    /**
     * 获取属性
     *
     * @param identifier 消息标识
     * @param deviceId   设备id
     * @param functionId  功能id
     * @return 属性值
     */
    @Override
    public Number getAttribute(String identifier, Long deviceId, Long functionId) {
        IotDebug iotDebug = new IotDebug();

        iotDebug.setIdentifier(identifier);
        iotDebug.setDeviceId(deviceId);
        iotDebug.setFunctionId(functionId);

        return iotDeviceService.getAttribute(iotDebug);
    }

    /**
     * 服务调用
     *
     * @param identifier 消息标识
     * @param deviceId   设备id
     * @param functionId 功能id
     * @param value      服务数据
     * @return 是否操作成功
     */
    @Override
    public boolean serveInvoke(String identifier, Long deviceId, Long functionId, JSONObject value) {
        IotDebugServe iotDebugServe = new IotDebugServe();

        iotDebugServe.setIdentifier(identifier);
        iotDebugServe.setDeviceId(deviceId);
        iotDebugServe.setFunctionId(functionId);
        iotDebugServe.setValue(value);

        return iotDeviceService.invokeService(iotDebugServe);
    }
}
