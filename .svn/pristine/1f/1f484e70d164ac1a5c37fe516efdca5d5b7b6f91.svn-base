<template>
    <div :class="{'has-logo':showLogo}" :style="{ backgroundColor: settings.sideTheme === 'theme-dark' ? variables.menuBackground : variables.menuLightBackground} + {height:topNav?'50px':'100%'}">
        <logo v-if="showLogo" :collapse="isCollapse"/>
        <template v-if="topNav">
            <i class="el-icon-arrow-left" @click="prevScroll"></i>
        </template>

        <el-scrollbar :class="settings.sideTheme" wrap-class="scrollbar-wrapper"
            :style="topNav?'width:84%;height:100%;margin:0 3%;':''" ref="scroll">
            <el-menu
                ref="currentNav"
                :default-active="activeMenu"
                :collapse="isCollapse"
                :background-color="settings.sideTheme === 'theme-dark' ? variables.menuBackground : variables.menuLightBackground"
                :text-color="settings.sideTheme === 'theme-dark' ? variables.menuColor : variables.menuLightColor"
                :unique-opened="true"
                :active-text-color="settings.theme"
                :collapse-transition="true"
                :mode="topNav?'horizontal':'vertical'"
                :style="topNav?'':'white-space:unset;'"
            >
                <sidebar-item
                    v-for="(route, index) in sidebarRouters"
                    :key="route.path  + index"
                    :item="route"
                    :base-path="route.path"
                    :class="topNav?'menu-item is_top':'menu-item is_left'"
                    :style="topNav?style:'width:100%;'"
                />
            </el-menu>
        </el-scrollbar>
        <template v-if="topNav">
            <el-tooltip class="item" effect="dark" content="点击展示更多导航" placement="right">
                <i class="el-icon-arrow-right" @click="nextScroll"></i>
            </el-tooltip>
        </template>
    </div>
</template>

<script>
import { mapGetters, mapState } from "vuex";
import Logo from "./Logo";
import TopNav from '@/components/TopNav'
import SidebarItem from "./SidebarItem";
import variables from "@/assets/styles/variables.scss";

export default {
    components: { SidebarItem, Logo, TopNav},
    computed: {
        ...mapState(["settings"]),
        ...mapGetters(["sidebarRouters", "sidebar"]),
        activeMenu() {
            const route = this.$route;
            const { meta, path } = route;
            // if set path, the sidebar will highlight the path you set
            if (meta.activeMenu) {
                return meta.activeMenu;
            }

          //   可视化大屏新窗口跳转
          if (path == "/tool/swagger") {
            let routeUrl = this.$router.resolve({
              path: "/indexPlus",
            });
            //新窗口打开页面
            window.open(routeUrl.href, "_blank");
            //原窗口保持原来的页面
            // this.$router.go(-1);
            return 0;
          }

          return path;
        },
        showLogo() {
            return this.$store.state.settings.sidebarLogo;
        },
        variables() {
            return variables;
        },
        isCollapse() {
            return !this.sidebar.opened;
        },
        topNav(){
            return this.$store.state.settings.topNav
        }
    },
    data(){
        return{
            style:null,
        }
    },
    mounted(){
        // 当前导航栏子元素数量
        const childrenLength = this.$refs.currentNav.$el['childElementCount'];
        if(childrenLength > 6){
            this.style = "width:16.7%;";
        }else{
            this.style = "width:20%;";
        }
    },
    methods: {
        prevScroll(){
            let wrap = this.$refs.scroll.$refs.wrap
            wrap.scrollLeft = wrap.scrollLeft - 150;
        },
        nextScroll(){
            let wrap = this.$refs.scroll.$refs.wrap
            wrap.scrollLeft = wrap.scrollLeft + 150;
        },
        changeScroll(e) {
        let wrap = this.$refs.scroll.$refs.wrap
        wrap.scrollLeft = wrap.scrollLeft - e.wheelDelta
        }
    }
};
</script>
<style lang="scss" scope>
    .hideSidebar .el-menu .menu-item .el-submenu__title .el-icon-arrow-right{display: none;}
    #el-scrollbar-top{
        width:100%;
        height: 50px !important;
        left:unset;
        top:unset;
        bottom:unset;
        position: unset;
    }
    .el-men-flex{display:flex;justify-content:left;align-items:center;}

    .theme-light .el-scrollbar__wrap{background-color:white;}
    .theme-light #app .sidebar-container{background-color: white;}
    .theme-light,.theme-dark{
        .el-scrollbar{
            .is-vertical{display: none;}
        }
        .index_menu{position: relative;
            .el-icon-arrow-left,.el-icon-arrow-right{position: absolute;top:17px;font-size:16px;cursor: pointer;}
            .el-icon-arrow-left{left:18%;color:white;}
            .el-icon-arrow-right{right:0%;color:white;}
            a{display: unset !important;;}
        }
        .el-scrollbar__view{
            width:100%;height:100%;
        }
       .el-scrollbar{
           .el-scrollbar__view{
               .el-menu{white-space:nowrap;
                   .menu-item{display:inline-block;vertical-align: bottom;}
               }
           }
       }
       .right-menu{
           .el-icon-caret-bottom{display:none;}
       }
    }
    .theme-light{
        .index_menu .el-icon-arrow-left,.index_menu .el-icon-arrow-right{position: absolute;top:17px;font-size:16px;cursor: pointer;}
        .index_menu .el-icon-arrow-left{left:16%;color: #000 !important;}
        .index_menu .el-icon-arrow-right{right: 0% !important;;color: #000 !important;}
        #app .sidebar-container .is_top .submenu-title-noDropdown.el-menu-item:hover{border-radius: 0px !important;}
    }
</style>
