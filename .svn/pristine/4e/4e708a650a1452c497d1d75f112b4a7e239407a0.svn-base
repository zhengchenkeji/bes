package com.ruoyi.systemSetting.parameterConfiguration.controller;

import java.util.List;
import javax.servlet.http.HttpServletResponse;

import com.ruoyi.energyCollection.acquisitionParam.domain.ElectricParams;
import com.ruoyi.systemSetting.parameterConfiguration.domain.ParameterConfiguration;
import com.ruoyi.systemSetting.parameterConfiguration.domain.ParamsConfiguration;
import com.ruoyi.systemSetting.parameterConfiguration.service.ParameterConfigurationService;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.annotation.Log;
import com.ruoyi.common.core.controller.BaseController;
import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.enums.BusinessType;
import com.ruoyi.common.utils.poi.ExcelUtil;
import com.ruoyi.common.core.page.TableDataInfo;

/**
 * 主采集参数Controller
 * 
 * @author ruoyi
 * @date 2022-11-30
 */
@RestController
@RequestMapping("/systemSetting/parameterConfiguration")
public class ParameterConfigurationController extends BaseController
{
    @Autowired
    private ParameterConfigurationService parameterConfigurationService;

    /**
     * 查询主采集参数列表
     */
    @PreAuthorize("@ss.hasPermi('system:params:list')")
    @GetMapping("/list")
    public TableDataInfo list(ParameterConfiguration parameterConfiguration)
    {
        startPage();
        List<ParameterConfiguration> list = parameterConfigurationService.selectAthenaBesParamsList(parameterConfiguration);
        return getDataTable(list);
    }

    /**
     * 导出主采集参数列表
     */
    @PreAuthorize("@ss.hasPermi('system:params:export')")
    @Log(title = "主采集参数", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, ParameterConfiguration parameterConfiguration)
    {
        List<ParameterConfiguration> list = parameterConfigurationService.selectAthenaBesParamsList(parameterConfiguration);
        ExcelUtil<ParameterConfiguration> util = new ExcelUtil<>(ParameterConfiguration.class);
        util.exportExcel(response, list, "主采集参数数据");
    }

    /**
     * 获取主采集参数详细信息
     */
    @PreAuthorize("@ss.hasPermi('system:params:query')")
    @GetMapping(value = "/{id}")
    public AjaxResult getInfo(@PathVariable("id") Long id)
    {
        return AjaxResult.success(parameterConfigurationService.selectAthenaBesParamsById(id));
    }

    /**
     * 新增主采集参数
     */
    @PreAuthorize("@ss.hasPermi('system:params:add')")
    @Log(title = "主采集参数", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody ParameterConfiguration parameterConfiguration)
    {
        return parameterConfigurationService.insertAthenaBesParams(parameterConfiguration);
    }

    /**
     * 修改主采集参数
     */
    @PreAuthorize("@ss.hasPermi('system:params:edit')")
    @Log(title = "主采集参数", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody ParameterConfiguration parameterConfiguration)
    {
        return parameterConfigurationService.updateAthenaBesParams(parameterConfiguration);
    }

    /**
     * 删除主采集参数
     */
    @PreAuthorize("@ss.hasPermi('system:params:remove')")
    @Log(title = "主采集参数", businessType = BusinessType.DELETE)
	@DeleteMapping("/{ids}")
    public AjaxResult remove(@PathVariable Long[] ids)
    {
        return toAjax(parameterConfigurationService.deleteAthenaBesParamsByIds(ids));
    }



    //----------------------------------------------采集参数------------------------------------------------------
    /**
     * 查询电能参数采集方案关系列表
     */
    @GetMapping("/listCheckList")
    public List<ElectricParams> listCheckList(ParamsConfiguration paramsConfiguration)
    {
        List<ElectricParams> list = parameterConfigurationService.listCheckList(paramsConfiguration);
        return list;
    }

    /**
     * 查询电能参数采集方案关系列表
     */
    @GetMapping("/listNoCheckList")
    public List<ElectricParams> listNoCheckList(ParamsConfiguration paramsConfiguration)
    {
        List<ElectricParams> list = parameterConfigurationService.listNoCheckList(paramsConfiguration);
        return list;
    }

    /**
     * 全部选中
     */
    @GetMapping("/allCheckList")
    public AjaxResult allCheckList(ParamsConfiguration paramsConfiguration)
    {
        return parameterConfigurationService.allCheckList(paramsConfiguration);
    }

    /**
     * 全部取消
     */
    @GetMapping("/allNoCheckList")
    public AjaxResult allNoCheckList(ParamsConfiguration paramsConfiguration)
    {
        return parameterConfigurationService.allNoCheckList(paramsConfiguration);
    }
    /**
     * 新增一条能耗
     */
    @GetMapping("/insertParamConfigRlgl")
    public AjaxResult insertParamConfigRlgl(ParamsConfiguration paramsConfiguration)
    {
        return parameterConfigurationService.insertParamConfigRlgl(paramsConfiguration);
    }
    /**
     * 取消一条能耗
     */
    @GetMapping("/delParamConfigRlgl")
    public AjaxResult delParamConfigRlgl(ParamsConfiguration paramsConfiguration)
    {
        return parameterConfigurationService.delParamConfigRlgl(paramsConfiguration);
    }
}
