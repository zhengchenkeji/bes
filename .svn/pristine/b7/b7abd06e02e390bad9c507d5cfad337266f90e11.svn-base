package com.ruoyi.systemSetting.electricityPriceSetting.controller;

import java.util.List;
import javax.servlet.http.HttpServletResponse;

import com.ruoyi.systemSetting.electricityPriceSetting.domain.ElectricityPriceRule;
import com.ruoyi.systemSetting.electricityPriceSetting.domain.ElectricityPriceSetting;
import com.ruoyi.systemSetting.electricityPriceSetting.service.ElectricityPriceSettingService;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.annotation.Log;
import com.ruoyi.common.core.controller.BaseController;
import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.enums.BusinessType;
import com.ruoyi.common.utils.poi.ExcelUtil;
import com.ruoyi.common.core.page.TableDataInfo;

/**
 * 电价设置Controller
 * 
 * @author ruoyi
 * @date 2022-11-29
 */
@RestController
@RequestMapping("/systemSetting/electricityPriceSetting")
public class ElectricityPriceSettingController extends BaseController
{
    @Autowired
    private ElectricityPriceSettingService electricityPriceSettingService;

    /**
     *
     * @Description: 获取电价规则列表
     *
     * @auther: gaojikun
     * @param: [electricityPriceRule]
     * @return: AjaxResult
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:list')")
    @PostMapping("/periceConfigListInfo")
    public AjaxResult periceConfigListInfo(ElectricityPriceRule electricityPriceRule) {
        return electricityPriceSettingService.periceConfigListInfo(electricityPriceRule);
    }

    /**
     * 删除电价规则
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:remove')")
    @Log(title = "电价设置", businessType = BusinessType.DELETE)
    @DeleteMapping("/deletepriceConfig/{ids}")
    public AjaxResult deletepriceConfig(@PathVariable Long[] ids)
    {
        return toAjax(electricityPriceSettingService.deletepriceConfig(ids));
    }

    /**
     * @Description: 添加电价规则
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:add')")
    @PostMapping("/addPriceConfig")
    public AjaxResult addPriceConfig(ElectricityPriceRule electricityPriceRule) {
        return electricityPriceSettingService.addPriceConfig(electricityPriceRule);
    }

    /**
     * @Description: 修改电价规则
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:edit')")
    @PostMapping("/updatePriceConfig")
    public AjaxResult updatePriceConfig(ElectricityPriceRule electricityPriceRule) {
        return electricityPriceSettingService.updatePriceConfig(electricityPriceRule);
    }



    /**
     * 查询电价设置列表
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:list')")
    @GetMapping("/list")
    public TableDataInfo list(ElectricityPriceSetting ElectricityPriceSetting)
    {
        startPage();
        List<ElectricityPriceSetting> list = electricityPriceSettingService.selectElectricityPriceSettingList(ElectricityPriceSetting);
        return getDataTable(list);
    }

    /**
     * 导出电价设置列表
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:export')")
    @Log(title = "电价设置", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, ElectricityPriceSetting ElectricityPriceSetting)
    {
        List<ElectricityPriceSetting> list = electricityPriceSettingService.selectElectricityPriceSettingList(ElectricityPriceSetting);
        ExcelUtil<ElectricityPriceSetting> util = new ExcelUtil<>(ElectricityPriceSetting.class);
        util.exportExcel(response, list, "电价设置数据");
    }

    /**
     * 获取电价设置详细信息
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:query')")
    @GetMapping(value = "/{id}")
    public AjaxResult getInfo(@PathVariable("id") Long id)
    {
        return AjaxResult.success(electricityPriceSettingService.selectElectricityPriceSettingById(id));
    }

    /**
     * 新增电价设置
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:add')")
    @Log(title = "电价设置", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody ElectricityPriceSetting ElectricityPriceSetting)
    {
        return electricityPriceSettingService.insertElectricityPriceSetting(ElectricityPriceSetting);
    }

    /**
     * 修改电价设置
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:edit')")
    @Log(title = "电价设置", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody ElectricityPriceSetting ElectricityPriceSetting)
    {
        return electricityPriceSettingService.updateElectricityPriceSetting(ElectricityPriceSetting);
    }

    /**
     * 删除电价设置
     */
    @PreAuthorize("@ss.hasPermi('systemStetting:electricityPriceSetting:remove')")
    @Log(title = "电价设置", businessType = BusinessType.DELETE)
	@DeleteMapping("/{ids}")
    public AjaxResult remove(@PathVariable Long[] ids)
    {
        return electricityPriceSettingService.deleteElectricityPriceSettingByIds(ids);
    }
}
