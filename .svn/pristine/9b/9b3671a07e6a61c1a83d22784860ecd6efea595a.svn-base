package com.zc.iot.service.impl;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.zc.iot.mapper.IotFunctionAnalysisMapper;
import com.zc.iot.domain.IotFunctionAnalysis;
import com.zc.iot.service.IIotFunctionAnalysisService;

/**
 * 功能定义_协议解析处理类型 Service业务层处理
 * 
 * @author Athena-YangChao
 * @date 2021-12-07
 */
@Service
public class IotFunctionAnalysisServiceImpl implements IIotFunctionAnalysisService 
{
    @Autowired
    private IotFunctionAnalysisMapper iotFunctionAnalysisMapper;

    /**
     * 查询功能定义_协议解析处理类型 
     * 
     * @param analysisType 功能定义_协议解析处理类型 主键
     * @return 功能定义_协议解析处理类型 
     */
    @Override
    public IotFunctionAnalysis selectIotFunctionAnalysisByAnalysisType(String analysisType)
    {
        return iotFunctionAnalysisMapper.selectIotFunctionAnalysisByAnalysisType(analysisType);
    }

    /**
     * 查询功能定义_协议解析处理类型 列表
     * 
     * @param iotFunctionAnalysis 功能定义_协议解析处理类型 
     * @return 功能定义_协议解析处理类型 
     */
    @Override
    public List<IotFunctionAnalysis> selectIotFunctionAnalysisList(IotFunctionAnalysis iotFunctionAnalysis)
    {
        return iotFunctionAnalysisMapper.selectIotFunctionAnalysisList(iotFunctionAnalysis);
    }

    /**
     * 新增功能定义_协议解析处理类型 
     * 
     * @param iotFunctionAnalysis 功能定义_协议解析处理类型 
     * @return 结果
     */
    @Override
    public int insertIotFunctionAnalysis(IotFunctionAnalysis iotFunctionAnalysis)
    {
        return iotFunctionAnalysisMapper.insertIotFunctionAnalysis(iotFunctionAnalysis);
    }

    /**
     * 修改功能定义_协议解析处理类型 
     * 
     * @param iotFunctionAnalysis 功能定义_协议解析处理类型 
     * @return 结果
     */
    @Override
    public int updateIotFunctionAnalysis(IotFunctionAnalysis iotFunctionAnalysis)
    {
        return iotFunctionAnalysisMapper.updateIotFunctionAnalysis(iotFunctionAnalysis);
    }

    /**
     * 批量删除功能定义_协议解析处理类型 
     * 
     * @param analysisTypes 需要删除的功能定义_协议解析处理类型 主键
     * @return 结果
     */
    @Override
    public int deleteIotFunctionAnalysisByAnalysisTypes(String[] analysisTypes)
    {
        return iotFunctionAnalysisMapper.deleteIotFunctionAnalysisByAnalysisTypes(analysisTypes);
    }

    /**
     * 删除功能定义_协议解析处理类型 信息
     * 
     * @param analysisType 功能定义_协议解析处理类型 主键
     * @return 结果
     */
    @Override
    public int deleteIotFunctionAnalysisByAnalysisType(String analysisType)
    {
        return iotFunctionAnalysisMapper.deleteIotFunctionAnalysisByAnalysisType(analysisType);
    }
}
