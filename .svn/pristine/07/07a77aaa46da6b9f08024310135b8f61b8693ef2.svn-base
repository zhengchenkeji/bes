package com.ruoyi.energyInfo.energy.mapper;

import com.ruoyi.energyInfo.energy.domain.EnergyConfig;
import com.ruoyi.energyInfo.energy.domain.EnergyType;
import org.apache.ibatis.annotations.Param;
import org.springframework.security.core.parameters.P;

import java.util.List;
import java.util.Map;


/**
 * 能源类型Mapper接口
 *
 * @author ruoyi
 * @date 2022-09-07
 */
public interface EnergyTypeMapper
{
    /**
     * 查询能源类型
     *
     * @param guid 能源类型主键
     * @return 能源类型
     */
    public EnergyType selectEnergyTypeByGuid(String guid);

    /**
     * 查询能源类型列表
     *
     * @param energyType 能源类型
     * @return 能源类型集合
     */
    List<EnergyType> selectEnergyTypeList(EnergyType energyType);

    List<EnergyConfig> selectParkEnergyRlglList(EnergyConfig energyConfig);

    /**
     * 查询能源类型列表
     *
     * @param code
     * @return 能源类型集合
     */
    List<Map<String,Object>> selectEnergyConfigList(@Param("code") String code);

    /**
     * 查询能源类型列表
     *
     * @param parkCode
     * @param energyCode
     * @return 能源类型集合
     */
    List<Map<String,Object>> selectEnergyConfigListByCode(@Param("parkCode") String parkCode,@Param("energyCode") String energyCode);

    /**
     * 查询能源类型列表
     *
     * @param energyType 能源类型
     * @return 能源类型集合
     */
    List<EnergyType> selectEnergyTypeListByCode(EnergyType energyType);

    /**
     * 新增能源类型
     *
     * @param energyType 能源类型
     * @return 结果
     */
    boolean insertEnergyType(EnergyType energyType);

    /**
     * 修改能源类型
     *
     * @param energyType 能源类型
     * @return 结果
     */
    boolean updateEnergyType(EnergyType energyType);

    /**
     * 删除能源类型
     *
     * @param guid 能源类型主键
     * @return 结果
     */
    boolean deleteEnergyTypeByGuid(String guid);

    /**
     * 批量删除能源类型
     *
     * @param guids 需要删除的数据主键集合
     * @return 结果
     */
    boolean deleteEnergyTypeByGuids(String[] guids);

    /**
     * 查询该园区下的能耗类型
     *
     * @param energyConfig
     * @return 结果
     */
    List<Map<String, Object>> findpark_energytype(EnergyConfig energyConfig);

    /**
     * 新增园区能耗
     *
     * @param energyConfig
     * @return 结果
     */
    int addpark_energytype(EnergyConfig energyConfig);

    /**
     * 删除园区能耗
     *
     * @param energyConfig
     * @return 结果
     */
    int delpark_energytype(EnergyConfig energyConfig);

    /**
     * 查询所有能耗类型根据园区code
     * @return 结果
     */
    List<EnergyType> findAllByParkCode(@Param("parkCode") String parkCode);

    List<EnergyType> allEnergyTypeList();
}
