package com.zc.efounder.JEnterprise.service.safetyWarning.impl;

import java.util.List;

import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.utils.DateUtils;
import com.ruoyi.common.utils.StringUtils;
import com.zc.efounder.JEnterprise.service.safetyWarning.IAlarmHistoricalDataService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.zc.efounder.JEnterprise.mapper.safetyWarning.AlarmHistoricalDataMapper;
import com.zc.efounder.JEnterprise.domain.safetyWarning.AlarmHistoricalData;

/**
 * 告警历史数据Service业务层处理
 *
 * @author qindehua
 * @date 2022-11-17
 */
@Service
public class AlarmHistoricalDataServiceImpl implements IAlarmHistoricalDataService
{
    @Autowired
    private AlarmHistoricalDataMapper alarmHistoricalDataMapper;

    /**
     * 查询告警历史数据
     *
     * @param id 告警历史数据主键
     * @return 告警历史数据
     */
    @Override
    public AlarmHistoricalData selectAlarmHistoricalDataById(Long id)
    {
        return alarmHistoricalDataMapper.selectAlarmHistoricalDataById(id);
    }

    /**
     * 查询告警历史数据列表
     *
     * @param alarmHistoricalData 告警历史数据
     * @return 告警历史数据
     */
    @Override
    public List<AlarmHistoricalData> selectAlarmHistoricalDataList(AlarmHistoricalData alarmHistoricalData)
    {
        return alarmHistoricalDataMapper.selectAlarmHistoricalDataList(alarmHistoricalData);
    }

    /**
     * 新增告警历史数据
     *
     * @param alarmHistoricalData 告警历史数据
     * @return 结果
     */
    @Override
    public int insertAlarmHistoricalData(AlarmHistoricalData alarmHistoricalData)
    {
        alarmHistoricalData.setCreateTime(DateUtils.getNowDate());
        return alarmHistoricalDataMapper.insertAlarmHistoricalData(alarmHistoricalData);
    }

    /**
     * 修改告警历史数据
     *
     * @param alarmHistoricalData 告警历史数据
     * @return 结果
     */
    @Override
    public int updateAlarmHistoricalData(AlarmHistoricalData alarmHistoricalData)
    {
        return alarmHistoricalDataMapper.updateAlarmHistoricalData(alarmHistoricalData);
    }

    /**
     * 批量删除告警历史数据
     *
     * @param ids 需要删除的告警历史数据主键
     * @return 结果
     */
    @Override
    public AjaxResult deleteAlarmHistoricalDataByIds(Long[] ids)
    {
        if (StringUtils.isEmpty(ids)){
            return AjaxResult.error("参数为空！");
        }
        return AjaxResult.success(alarmHistoricalDataMapper.deleteAlarmHistoricalDataByIds(ids));
    }

    /**
     * 删除告警历史数据信息
     *
     * @param id 告警历史数据主键
     * @return 结果
     */
    @Override
    public int deleteAlarmHistoricalDataById(Long id)
    {
        return alarmHistoricalDataMapper.deleteAlarmHistoricalDataById(id);
    }
}
