package com.zc.relay.handler;

import com.zc.iot.domain.*;

import java.util.List;
import java.util.Map;

/**
 * 对外数据接口
 * @author Athena-xiepufeng
 */
public interface TradeGetDataHandle
{

    /*---------------- 品类 ------------------*/
    /**
     * 获取全部品类数据
     * @return
     */
    List<IotCategory> getCategoryData();

    /**
     * 根据id获取品类数据
     * @param id
     * @return
     */
    IotCategory getCategoryData(Long id);

    /*---------------- 功能 ------------------*/
    /**
     * 获取全部品类数据
     * @return
     */
    List<IotFunction> getFunctionData();

    /**
     * 根据id获取功能数据
     * @param id
     * @return
     */
    IotFunction getFunctionData(Long id);

    /**
     * 根据品类id获取功能数据
     * @param categoryId
     * @return
     */
    List<IotFunction> getFunctionDataByCategoryId(Long categoryId);

    /**
     * 根据设备id获取功能数据
     * @param deviceId
     * @return
     */
    List<IotFunction> getFunctionDataByDeviceId(Long deviceId);

    /*---------------- 功能值 ------------------*/

    /**
     * 获取全部功能值数据
     * @return
     */
    List<IotFunctionValue> getFunctionValueData();

    /**
     * 根据id获取功能值数据
     * @param id
     * @return
     */
    IotFunctionValue getFunctionValueData(Long id);


    /**
     * 根据功能id 获取功能值
     * @return
     */
    List<IotFunctionValue> getFunctionValueDataByFunctionId(Long functionId);

    /*---------------- 产品 ------------------*/

    /**
     * 获取全部产品数据
     * @return
     */
    List<IotProduct> getProductData();

    /**
     * 根据id获取产品数据
     * @param id
     * @return
     */
    IotProduct getProductData(Long id);

    /**
     * 根据品类id获取产品
     * @return
     */
    List<IotProduct> getProductDataByCategoryId(Long categoryId);


    /*---------------- 设备 ------------------*/
    /**
     * 获取全部设备数据
     * @return
     */
    List<IotDevice> getDeviceData();

    /**
     * 根据id获取设备数据
     * @return
     */
    IotDevice getDeviceData(Long id);

    /**
     * 根据产品id获取设备数据
     * @return
     */
    List<IotDevice> getDeviceDataByProductId(Long productId);

    /**
     * 根据分组id获取设备数据
     * @return
     */
    List<IotDevice> getDeviceDataByGroupId(Long groupId);

    /*---------------- 分组 ------------------*/

    /**
     * 获取全部分组数据
     * @return
     */
    List<IotGroup> getGroupData();


    /**
     * 根据id获取分组数据
     * @return
     */
    IotGroup getGroupData(Long id);

    /*---------------- 设备功能数据 ------------------*/

    /**
     * 根据设备id获取设备功能值
     * @param deviceId 设备id
     * @return 设备功能值
     */
    Map<String, Number> getDeviceFunctionValue(Long deviceId);

    /**
     * 根据设备id和功能id获取设备功能值
     * @param deviceId 设备id
     * @param functionId 功能id
     * @return 设备功能值
     */
    Number getDeviceFunctionValue(Long deviceId, Long functionId);
}
