<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.efounder.JEnterprise.mapper.noticeManage.NoticeConfigMapper">

    <resultMap type="NoticeConfig" id="NoticeConfigResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="noticetype"    column="noticeType"    />
        <result property="servicefactory"    column="serviceFactory"    />
        <result property="regionid"    column="regionId"    />
        <result property="accesskeyid"    column="accessKeyId"    />
        <result property="secret"    column="secret"    />
        <result property="fromemail"    column="fromEmail"    />
        <result property="fromemailpwd"    column="fromEmailpwd"    />
        <result property="emailServerHost"    column="emailServerHost"    />
        <result property="emailServerPort"    column="emailServerPort"    />
        <result property="recipient"    column="recipient"    />
        <result property="token"    column="token"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectNoticeConfigVo">
        select id, name, noticeType, serviceFactory, regionId, accessKeyId, secret, fromEmail, fromEmailpwd,emailServerHost,emailServerPort, recipient,token, create_time, update_time from athena_bes_notice_config
    </sql>

    <select id="selectNoticeConfigList" parameterType="NoticeConfig" resultMap="NoticeConfigResult">
        <include refid="selectNoticeConfigVo"/>
        <where>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="noticetype != null  and noticetype != ''"> and noticeType = #{noticetype}</if>
            <if test="servicefactory != null  and servicefactory != ''"> and serviceFactory = #{servicefactory}</if>
            <if test="regionid != null  and regionid != ''"> and regionId = #{regionid}</if>
            <if test="accesskeyid != null  and accesskeyid != ''"> and accessKeyId = #{accesskeyid}</if>
            <if test="secret != null  and secret != ''"> and secret = #{secret}</if>
            <if test="fromemail != null  and fromemail != ''"> and fromEmail = #{fromemail}</if>
            <if test="fromemailpwd != null  and fromemailpwd != ''"> and fromEmailpwd = #{fromemailpwd}</if>
            <if test="recipient != null  and recipient != ''"> and recipient = #{recipient}</if>
        </where>
    </select>

    <select id="selectNoticeConfigById" parameterType="Long" resultMap="NoticeConfigResult">
        <include refid="selectNoticeConfigVo"/>
        where id = #{id}
    </select>
    <select id="getNoticeConfigbyTemplate"
            resultType="com.zc.efounder.JEnterprise.domain.noticeManage.NoticeConfig">
        <include refid="selectNoticeConfigVo"/>
        where noticeType=#{noticeType} and serviceFactory=#{serviceFactory}
        order by create_time desc
    </select>

    <insert id="insertNoticeConfig" parameterType="NoticeConfig" useGeneratedKeys="true" keyProperty="id">
        insert into athena_bes_notice_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="noticetype != null">noticeType,</if>
            <if test="servicefactory != null">serviceFactory,</if>
            <if test="regionid != null">regionId,</if>
            <if test="accesskeyid != null">accessKeyId,</if>
            <if test="secret != null">secret,</if>
            <if test="fromemail != null">fromEmail,</if>
            <if test="fromemailpwd != null">fromEmailpwd,</if>
            <if test="emailServerHost != null">emailServerHost,</if>
            <if test="emailServerPort != null">emailServerPort,</if>
            <if test="recipient != null">recipient,</if>
            <if test="token != null">token,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="noticetype != null">#{noticetype},</if>
            <if test="servicefactory != null">#{servicefactory},</if>
            <if test="regionid != null">#{regionid},</if>
            <if test="accesskeyid != null">#{accesskeyid},</if>
            <if test="secret != null">#{secret},</if>
            <if test="fromemail != null">#{fromemail},</if>
            <if test="fromemailpwd != null">#{fromemailpwd},</if>
            <if test="emailServerHost != null">#{emailServerHost},</if>
            <if test="emailServerPort != null">#{emailServerPort},</if>
            <if test="recipient != null">#{recipient},</if>
            <if test="token != null">#{token},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateNoticeConfig" parameterType="NoticeConfig">
        update athena_bes_notice_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="noticetype != null">noticeType = #{noticetype},</if>
            <if test="servicefactory != null">serviceFactory = #{servicefactory},</if>
            <if test="regionid != null">regionId = #{regionid},</if>
            <if test="accesskeyid != null">accessKeyId = #{accesskeyid},</if>
            <if test="secret != null">secret = #{secret},</if>
            <if test="fromemail != null">fromEmail = #{fromemail},</if>
            <if test="fromemailpwd != null">fromEmailpwd = #{fromemailpwd},</if>
            <if test="emailServerHost != null">emailServerHost=#{emailServerHost},</if>
            <if test="emailServerPort != null">emailServerPort=#{emailServerPort},</if>
            <if test="recipient != null">recipient = #{recipient},</if>
            <if test="token != null">token = #{token},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteNoticeConfigById" parameterType="Long">
        delete from athena_bes_notice_config where id = #{id}
    </delete>

    <delete id="deleteNoticeConfigByIds" parameterType="String">
        delete from athena_bes_notice_config where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
