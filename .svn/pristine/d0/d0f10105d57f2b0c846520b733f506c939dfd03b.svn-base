package com.zc.efounder.JEnterprise.controller.baseData;

import java.util.List;
import java.util.stream.Collectors;
import javax.servlet.http.HttpServletResponse;

import com.ruoyi.common.core.page.PageDomain;
import com.ruoyi.common.core.page.TableSupport;
import com.zc.efounder.JEnterprise.domain.baseData.Equipment;
import com.zc.efounder.JEnterprise.domain.baseData.PageInfoStream;
import com.zc.efounder.JEnterprise.domain.baseData.Product;
import com.zc.efounder.JEnterprise.service.baseData.EquipmentService;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.ruoyi.common.annotation.Log;
import com.ruoyi.common.core.controller.BaseController;
import com.ruoyi.common.core.domain.AjaxResult;
import com.ruoyi.common.enums.BusinessType;
import com.ruoyi.common.utils.poi.ExcelUtil;
import com.ruoyi.common.core.page.TableDataInfo;

/**
 * 物联设备Controller
 * 
 * @author gaojikun
 * @date 2023-03-08
 */
@RestController
@RequestMapping("/baseData/equipment")
public class EquipmentController extends BaseController
{
    @Autowired
    private EquipmentService athenaBesEquipmentService;

    /**
     * 查询物联设备列表
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:list')")
    @GetMapping("/list")
    public PageInfoStream list(Equipment athenaBesEquipment)
    {
        PageDomain pageDomain = TableSupport.buildPageRequest();
        Integer pageNum = pageDomain.getPageNum();
        Integer pageSize = pageDomain.getPageSize();
        List<Equipment> list = athenaBesEquipmentService.selectAthenaBesEquipmentList(athenaBesEquipment);
        //java8流分页
        List<Equipment> subList = list.stream().skip((pageNum-1)*pageSize).limit(pageSize).
                collect(Collectors.toList());
        PageInfoStream pageInfoStream = new PageInfoStream();
        pageInfoStream.setTotal(list.size());
        pageInfoStream.setData(subList);
        return pageInfoStream;
    }

    /**
     * 查询物联子设备列表
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:list')")
    @GetMapping("/sonList")
    public PageInfoStream sonList(Equipment athenaBesEquipment)
    {
        PageDomain pageDomain = TableSupport.buildPageRequest();
        Integer pageNum = pageDomain.getPageNum();
        Integer pageSize = pageDomain.getPageSize();
        List<Equipment> list = athenaBesEquipmentService.selectAthenaBesEquipmentList(athenaBesEquipment);
        //java8流分页
        List<Equipment> subList = list.stream().skip((pageNum-1)*pageSize).limit(pageSize).
                collect(Collectors.toList());
        PageInfoStream pageInfoStream = new PageInfoStream();
        pageInfoStream.setTotal(list.size());
        pageInfoStream.setData(subList);
        return pageInfoStream;
    }

    /**
     * 导出物联设备列表
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:export')")
    @Log(title = "物联设备", businessType = BusinessType.EXPORT)
    @PostMapping("/export")
    public void export(HttpServletResponse response, Equipment athenaBesEquipment)
    {
        List<Equipment> list = athenaBesEquipmentService.selectAthenaBesEquipmentList(athenaBesEquipment);
        ExcelUtil<Equipment> util = new ExcelUtil<>(Equipment.class);
        util.exportExcel(response, list, "物联设备数据");
    }

    /**
     * 获取物联设备详细信息
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:query')")
    @GetMapping(value = "/{id}")
    public AjaxResult getInfo(@PathVariable("id") Long id)
    {
        return athenaBesEquipmentService.selectAthenaBesEquipmentById(id);
    }

    /**
     * 获取物联设备详情
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:query')")
    @GetMapping(value = "/info/{id}")
    public AjaxResult getInfoById(@PathVariable("id") Long id)
    {
        return athenaBesEquipmentService.selectAthenaBesEquipmentInfoById(id);
    }

    /**
     * 获取物联设备实时数据
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:query')")
    @GetMapping(value = "/actualTime/{id}")
    public AjaxResult getActualTimeById(@PathVariable("id") Long id)
    {
        return athenaBesEquipmentService.selectAthenaBesEquipmentActualTimeById(id);
    }

    /**
     * 新增物联设备
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:add')")
    @Log(title = "物联设备", businessType = BusinessType.INSERT)
    @PostMapping
    public AjaxResult add(@RequestBody Equipment athenaBesEquipment)
    {
        return athenaBesEquipmentService.insertAthenaBesEquipment(athenaBesEquipment);
    }

    /**
     * 修改物联设备
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:edit')")
    @Log(title = "物联设备", businessType = BusinessType.UPDATE)
    @PutMapping
    public AjaxResult edit(@RequestBody Equipment athenaBesEquipment)
    {
        return athenaBesEquipmentService.updateAthenaBesEquipment(athenaBesEquipment);
    }

    /**
     * 删除物联设备
     */
    @PreAuthorize("@ss.hasPermi('baseData:equipment:remove')")
    @Log(title = "物联设备", businessType = BusinessType.DELETE)
	@DeleteMapping("/{ids}")
    public AjaxResult remove(@PathVariable Long[] ids)
    {
        return athenaBesEquipmentService.deleteAthenaBesEquipmentByIds(ids);
    }
}
